{"version":3,"sources":["App.js","index.js"],"names":["App","today","Date","newDate","getDate","getMonth","getFullYear","useState","search","setSearch","todoItems","setTodoItems","date","className","action","onSubmit","e","preventDefault","id","value","type","placeholder","onChange","target","map","item","index","onClick","updatedList","filter","closeBtn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA+DeA,MA5Df,WACE,IAAIC,EAAQ,IAAIC,KAChBC,EAAUF,EAAMG,UAAY,KAAOH,EAAMI,WAAa,GAAK,IAAMJ,EAAMK,cAEvE,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwBJ,mBAASJ,GAAjC,mBAAOS,EAAP,KAyBA,OAzBA,KA0BE,sBAAKC,UAAU,UAAf,UACE,uBAAMC,OAAO,IAAIC,SAAUP,EAvBZ,SAACQ,GACpBA,EAAEC,iBACFR,EAAU,IACVE,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAACQ,GAAKV,EAAQW,MAAQX,OAoBK,KAAnD,UACE,uBACIY,KAAK,OACLC,YAAY,YACZF,MAAOX,EACPc,SArBQ,SAACN,GACnBP,EAAUO,EAAEO,OAAOJ,UAsBb,0CAGF,sBAAKN,UAAU,kBAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBD,IACvB,6BACKF,EAAUc,KAAI,SAACC,EAAMC,GAAP,OACb,+BAGCA,EAHD,KAGUD,EAAKN,MACf,wBAAQN,UAAU,YAAYc,QAAS,kBA9BrD,SAAkBT,GACN,YAAOR,GAAjB,IACMkB,EAAclB,EAAUmB,QAAO,SAAAJ,GAAI,OAAIP,IAAOO,EAAKP,MACzDP,EAAa,YAAIiB,IA2BwCE,CAASL,EAAKP,KAA3D,iBAHKO,EAAKP,gBC/CxBa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.95ed0453.chunk.js","sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react';\n\nfunction App() {\n  var today = new Date(),\n  newDate = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\n\n  const [search, setSearch] = useState('')\n  const [todoItems, setTodoItems] = useState([])\n  const [date, setDate] = useState(newDate)\n\n  \n\nconst handleSubmit = (e) => {\n  e.preventDefault()\n  setSearch('')\n  setTodoItems([...todoItems, {id : search, value : search}])\n}\n\n\nconst handleInput = (e) => {\n  setSearch(e.target.value)\n}\n\nfunction closeBtn(id) {\n  const list = [...todoItems]\n  const updatedList = todoItems.filter(item => id !== item.id)\n  setTodoItems([...updatedList])\n}\n\n\n\n\n\n  return (\n    <div className=\"Wrapper\">\n      <form action=\"#\" onSubmit={search ? handleSubmit : null}>\n        <input \n            type=\"text\" \n            placeholder=\"Type Item\" \n            value={search}\n            onChange={handleInput} \n            />\n        <button>+</button>\n      </form>\n\n      <div className=\"lists-container\">\n        <div className=\"date\">{date}</div>\n        <ol>\n            {todoItems.map((item, index) => (\n              <li \n              key={item.id}\n              >\n              {index}. {item.value}\n              <button className=\"close-btn\" onClick={() => closeBtn(item.id)}>x</button>\n              </li>\n            ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}